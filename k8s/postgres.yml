kind: Deployment
apiVersion: apps/v1
metadata:
  name: server-postgres
  labels:
    app: server-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: server-postgres
  template:
    metadata:
      labels:
        app: server-postgres
    spec:
      containers:
        - name: server-postgres
          image: 'postgres:14.4-alpine'
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: server-env
          volumeMounts:
            - name: server-postgres-volume
              mountPath: /var/lib/postgresql/data
      # initContainers:
      #   - name: wait-for-server-postgres
      #     image: image-docker-containing-sh
      #     args:
      #       - /bin/sh
      #       - -c
      #       - /usr/app/wait-for-it.sh server-postgres:5432 -t 0
      volumes:
        - name: server-postgres-volume
          persistentVolumeClaim:
            claimName: server-postgres-claim
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: server-postgres
  name: server-postgres
spec:
  selector:
    app: server-postgres
  ports:
    - port: 5432
      targetPort: 5432
  type: LoadBalancer
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: server-postgres-volume
  labels:
    app: server-postgres
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /var/lib/postgresql/data
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: server-postgres-claim
  labels:
    app: server-postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  volumeMode: Filesystem
  resources:
    requests:
      storage: 5Gi
